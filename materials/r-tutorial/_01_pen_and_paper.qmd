
\

## Exercise 2: Data Visualization Activity
*reproduced from a Schmidt Science Fellowship activity, thanks to Fatima Hussain*

> Patterns are the essence of data exploration and our eyes' ability to pick them out is integral to data understanding. Much of the data we work with, however, do not have a natural form and we need to make decisions about how they are to be represented. Try different ways to visualize the datasets so meaningful patterns may be found.  


### Genetic profiles of cancer  
These datasets contains 10 cancer samples. @tbl-1 describes the mutational status for a set of genes (A-E) and whether a mutation if absent (0) or present (1). @tbl-2 summarizes the expression levels of those genes, ranging from no expression (0) to high expression (3). 

 
|   sample ->   |  1   |  2   |  3   |  4   |  5   |  6   |  7   |  8   |  9   |  10   |
|------|------|------|------|------|------|------|------|------|------|------|
| **Gene A**    | 0    | 0    | 0    | 0    | 0    | 1    | 0    | 0    | 0    | 0    |
| **Gene B**    | 0    | 0    | 0    | 0    | 1    | 1    | 1    | 0    | 1    | 1    |
| **Gene C**    | 0    | 0    | 1    | 0    | 0    | 0    | 1    | 1    | 1    | 1    |
| **Gene D**    | 1    | 1    | 0    | 0    | 1    | 1    | 0    | 0    | 0    | 0    |
| **Gene E**    | 0    | 1    | 1    | 0    | 1    | 0    | 0    | 0    | 1    | 0    |
: Mutational status for a set of genes {#tbl-1 .striped .table-bordered .table-sm}

 
|   sample ->   |  1   |  2   |  3   |  4   |  5   |  6   |  7   |  8   |  9   |  10   |
|------|------|------|------|------|------|------|------|------|------|------|
| **Gene A**    | 2    | 1    | 1    | 2    | 2    | 0    | 2    | 1    | 1    | 2    |
| **Gene B**    | 1    | 1    | 2    | 1    | 0    | 0    | 0    | 2    | 0    | 0    |
| **Gene C**    | 1    | 1    | 3    | 1    | 2    | 2    | 3    | 0    | 3    | 0    |
| **Gene D**    | 0    | 0    | 2    | 1    | 3    | 3    | 2    | 1    | 1    | 1    |
| **Gene E**    | 1    | 3    | 3    | 1    | 3    | 1    | 2    | 1    | 3    | 2    |
: Expression levels for a set of genes {#tbl-2 .striped .table-bordered .table-sm}





 \

|           1. Think about the problem on your own for 5 minutes.  
|           2. In your groups, discuss and create different visualizations to highlight underlying patterns  
|           3. Summarize the group's approach  
|           4. Elect/volunteer a spokesperson to present the solution  
  
  
\


On [excalidraw.com](excalidraw.com) or pen and paper, create a visualization to answer the questions below. Check out [the data visualization  cheatsheet](https://rstudio.github.io/cheatsheets/data-visualization.pdf) for inspiration. Think about values you'd have to compute, or if you have everything you need already in our `joined_data` table. 




**Consider the following concepts when creating your visualizations**

::: {.grid}

:::{.g-col-12  .text-center}

### Patterns

Patterns are the essence of data exploration. What kinds of representation will produce the most meaningful insights? 

![](images/ws_patterns1.png){width=200}
![](images/ws_patterns2.png){width=200}
![](images/ws_patterns3.png){width=200}
![](images/ws_patterns4.png){width=200}

### Encodings
Some visual estimations are easier to make than others. How might you use **encodings** that are less accurate but otherwise better at conveying overall trends?

![](images/ws_encod1.png){width=45%}
![](images/ws_encod2.png){width=45%}
![](images/ws_encod3.png){width=45%}
:::

:::{.g-col-12 .text-center}
### Color
**Color** is a powerful encoding that presents several challenges. Have you chosen a color scale that is optimal for that data type?

![](images/ws_color1.png){width=19%}
![](images/ws_color2.png){width=19%}
![](images/ws_color3.png){width=19%}
![](images/ws_color4.png){width=19%}

### Salience and Relevance

Pop-out effects enable quick recognition. Are the most **noticeable** elements of your visualizations also the most **relevant**?

![](images/ws_salience2.png){width=90%}

:::
:::


```{r}
#| echo: false
#| eval: false
#| warning: false
# install.packages("fBasics")
library(fBasics)
library(ggplot2)
library(grid) 
library(gridExtra)
library(datasets)
library(cowplot)

mycols <- c("#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#CC79A7","#D55E00","#612B8F","#999999")

p1 <- ggplot(anscombe) +
  geom_point(aes(x1, y1), color = "#E69F00", size = 4) +
  scale_x_continuous(breaks = seq(0,20,2), limits = c(1, 20), expand = c(0, 0)) +
  scale_y_continuous(breaks = seq(0,12,2),  limits = c(0.5, 15), expand = c(0, 0)) +
  expand_limits(x = 0, y = 0) +
  labs(x = "", y = "") +
  theme_cowplot() + 
  theme(axis.text.x=element_blank(),
      axis.ticks.x=element_blank(),
      axis.text.y=element_blank(),
      axis.ticks.y=element_blank())
p2 <- ggplot(anscombe) +
  geom_point(aes(x2, y2), color = "#E69F00", size = 4) +
  scale_x_continuous(breaks = seq(0,20,2) , limits = c(1, 20), expand = c(0, 0)) +
  scale_y_continuous(breaks = seq(0,12,2),  limits = c(0.5, 15), expand = c(0, 0)) +
  expand_limits(x = 0, y = 0) +
  labs(x = "", y = "") +
  theme_cowplot() + 
  theme(axis.text.x=element_blank(),
      axis.ticks.x=element_blank(),
      axis.text.y=element_blank(),
      axis.ticks.y=element_blank())
  p3 <- ggplot(anscombe) +
  geom_point(aes(x3, y3), color = "#E69F00", size = 4) +
  scale_x_continuous(breaks = seq(0,20,2), limits = c(1, 20), expand = c(0, 0)) +
  scale_y_continuous(breaks = seq(0,12,2),  limits = c(0.5, 15), expand = c(0, 0)) +
  expand_limits(x = 0, y = 0) +
  labs(x = "", y = "") +
  theme_cowplot() + 
  theme(axis.text.x=element_blank(),
      axis.ticks.x=element_blank(),
      axis.text.y=element_blank(),
      axis.ticks.y=element_blank())
  p4 <- ggplot(anscombe) +
  geom_point(aes(x4, y4), color = "#E69F00", size = 4) +
  scale_x_continuous(breaks = seq(5,20,2), limits = c(1, 20), expand = c(0, 0)) +
  scale_y_continuous(breaks = seq(0,12,2),  limits = c(0.5, 15), expand = c(0, 0)) +
  expand_limits(x = 0, y = 0) +
  labs(x = "", y = "") +
  theme_cowplot()  +
  theme(axis.text.x=element_blank(),
      axis.ticks.x=element_blank(),
      axis.text.y=element_blank(),
      axis.ticks.y=element_blank())

grid.arrange(grobs = list(p1, p2, p3, p4), 
             ncol = 4)

save_plot("ws_color4.png", p4)

data <- data.frame("Quantitative" = seq(0, 10, by = 0.1), y = seq(0,100))
#creating a plot with a gradient
p5 <- ggplot(data, aes(x = Quantitative, y = y)) +
  geom_tile(aes(fill = Quantitative), width = 1, height = 1) + 
  scale_fill_gradient(low = "lightyellow", high = "darkorange") +
  labs(title = "Quantitative") +
  theme_minimal() + 
  theme_cowplot()

data <- data.frame("Quantitative" = seq(-10, 10, by = 0.1), y = seq(0,200))
p6 <- ggplot(data, aes(x = Quantitative, y = y)) +
  geom_tile(aes(fill = Quantitative), width = 1, height = 1) + 
  scale_fill_gradient(low = "darkblue", high = "darkorange") +
  labs(title = "Quantitative") +
  theme_minimal()

data <- data.frame(
  Nominal = c("Oranges", "Apples", "Grapes"),
  Ordinal = c("high", "medium", "low")
)
p7 <- ggplot(data, aes(x = "", y = Ordinal, fill = Nominal)) +
  geom_tile() +
  scale_fill_manual(values=c("orange","lightgreen","purple")) + 
  theme_minimal() + 
  theme_cowplot()
  

p8 <- ggplot(data, aes(x = "", y = Nominal, fill = Ordinal)) +
  geom_tile() +
  scale_fill_manual(values=c("lightblue","blue","darkblue")) + 
  theme_minimal() + 
  theme_cowplot()

save_plot("ws_color1.png", p5)
save_plot("ws_color2.png", p6)
save_plot("ws_color3.png", p7)
save_plot("ws_color4.png", p8)

data <- data.frame(
  group = c("Oranges", "Apples", "Grapes","Banana","Watermelon"),
  value = c(runif(5))
)

data1 <- data.frame(
  group = c("Oranges"),
  value = c(runif(1))
)
# Create the pie ggplot
p9 <- ggplot(data, aes(x="", y=value, fill=group)) +
  geom_bar(stat="identity", width=1) +
  coord_polar("y", start=0) + 
  scale_fill_manual(values = mycols) + 
  theme_cowplot() + 
  theme_void()

p10 <- ggplot(data1, aes(x="", y=value, fill=group)) +
  geom_bar(stat="identity", width=1) +
  coord_polar("y", start=0) + 
  scale_fill_manual(values = mycols) + 
  theme_cowplot() + 
  theme_void()


p11 <- ggplot(data, aes(x=group, y=value, fill=group)) +
  geom_bar(stat="identity", width=1) +
  scale_fill_manual(values = mycols) + 
  theme_cowplot() +
  labs(x = "", y = "")


save_plot("ws_encod1.png", p9)
save_plot("ws_encod2.png", p10)
save_plot("ws_encod3.png", p11)


```
